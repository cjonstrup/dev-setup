#!/usr/bin/env bash

set -e

skip_system_packages="${1}"

os_type="$(uname -s)"

# Setup variable for needed console color definitions
RED='\033[1;31m'
YELLOW='\033[1;33m'
GREEN='\033[1;32m'
NC='\033[0m' # No Color

dnf_packages="curl git ripgrep tmux vim zsh"
dnf_packages_optional="dnf-plugins-core gnome-tweak-tool unzip p7zip unrar libnsl tig make gnupg htop jq pass sysstat pwgen rsync shellcheck unzip nodejs util-linux-user"
dnf_packages_php="php-cli composer php-mysqli php-pgsql php-apc php-bcmath php-xdebug"
dnf_remove_packages="php-mysqlnd"

###############################################################################
# Install packages using your OS' package manager
###############################################################################

function dnf_install_packages {
    # shellcheck disable=SC2086
    #sudo dnf update && sudo dnf install -y ${dnf_packages} ${dnf_packages_optional} ${dnf_packages_compression} ${dnf_packages_php}
    echo "dnf_install_packages"
}

function dnf_remove_packages {
    # shellcheck disable=SC2086
    #sudo dnf update && sudo dnf install -y ${dnf_remove_packages}
    echo "dnf_remove_packages"
}

function dnf_system_setup {
    # shellcheck disable=SC2086
    # sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
    # sudo dnf -y install docker-ce docker-ce-cli containerd.io && systemctl enable docker && gpasswd -a ${USER} docker && sudo systemctl restart docker && sudo newgrp docker
    
    #sudo curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    #sudo chmod +x /usr/local/bin/docker-compose
    
    #sudo wget https://github.com/bcicen/ctop/releases/download/v0.7.6/ctop-0.7.6-linux-amd64 -O /usr/local/bin/ctop
    #sudo chmod +x /usr/local/bin/ctop
    
    #sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    #sudo dnf -y install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

    echo "dnf_system_setup"
}

function display_packages {
    if [ "${os_type}" == "Linux" ]; then
        printf "${dnf_packages}\n${dnf_packages_optional}\n${dnf_packages_php}"
    else
        exit 0
    fi
}

if [ -z "${skip_system_packages}" ]; then

printf "${GREEN}Fedora install ${YELLOW}version 0.0.1 ${GREEN}${NC}\n\n"
printf "If you choose yes, all of the system packages below will be installed:\n\n"
printf "${RED}$(display_packages)${NC}\n\n"

cat << EOF
If you choose no, the above packages will not be installed and this script
will exit. This gives you a chance to edit the list of packages if you don't
agree with any of the decisions.


The packages listed after zsh are technically optional but are quite useful.
Keep in mind if you don't install pwgen you won't be able to generate random
passwords using a custom alias that's included in these dotfiles.


EOF
    while true; do
        printf "${GREEN}"
        read -rp "Do you want to install the above packages? (y/n) " yn
        printf "${NC}"
        case "${yn}" in
            [Yy]*)
                if [ "${os_type}" == "Linux" ]; then
                    dnf_install_packages
                    dnf_system_setup
                else
                    exit 0
                fi

                break;;
            [Nn]*) exit 0;;
            *) echo "Please answer y or n";;
        esac
    done
else
    echo "System package installation was skipped!"
fi


###############################################################################
# Done!
###############################################################################

cat << EOF
Everything was installed successfully!
Check out the README file on GitHub to do 1 quick thing manually:
https://github.com/cjonstrup/dev-setup
You can safely close this terminal.
The next time you open your terminal zsh will be ready to go!
EOF

exit 0